---

# Install python requirements on local VM
- name: Install python requirements on local VM
  hosts: MyLocalVMs
  tasks:
  - name: Install specified python requirements
    pip:
      requirements: ~/app/requirements.txt
         
# Provision 2 cloud instances from local VM
- name: Provision 2 cloud instances from local VM
  hosts: MyLocalVMs
  collections:   # this is new starting with Ansible 2.9 (akin to importing package)
    - openstack.cloud
  tasks:
   - include_tasks: register_cloud_hosts.yml

# Wait a few seconds to ensure SSH into cloud host works
- name: Wait a few seconds to ensure SSH into cloud host works
  hosts: MyLocalVMs
  tasks:        
  - name: wait to ensure cloud host is ready to connect
    ansible.builtin.shell:
      cmd: sleep 50s

# Install K8s
- name: install k8s
  hosts: MyChameleonVMs
  become: yes
  remote_user: cc
  collections:
    - openstack.cloud
  tasks:
  - include_tasks: install_kubernetes.yml

# set k8s master node
- name: configure k8s master node
  hosts: K8sMaster
  remote_user: cc
  collections:
    - openstack.cloud
  tasks:
  - name: configure k8s master node
    ansible.builtin.script:
      cmd: install_kubernetes_master.sh
  - name: k8s cluster token generation
    ansible.builtin.shell:
      cmd: sudo kubeadm token create --print-join-command
    register: join_cluster_script

# worker join k8s cluster
- name: worker join k8s cluster
  hosts: K8sWorker
  remote_user: cc
  become: yes
  collections:
    - openstack.cloud
  tasks:
  - name: set hostname
    ansible.builtin.shell:
      cmd: hostnamectl set-hostname worker-node
  - name: worker join k8s cluster
    ansible.builtin.shell:
      cmd: "sudo {{ hostvars['129.114.26.59']['join_cluster_script'].stdout }}"

# #
# # Run Producer on local VM
# #
# - name: Run Producer on local VM
#   hosts: MyLocalVMs
  
#   tasks:
         
#   - name: start Producer
#     ansible.builtin.shell:
#       cmd: nohup python3 Producer.py --topic TSLA </dev/null >/dev/null 2>&1 &
#       chdir: ~/app
        
        
...